{
  "swagger": "2.0",
  "info": {
    "title": "HIP API",
    "description": "A RESTful API for Medical Teams International's Health Information Program (HIP).",
    "version": "1.0.0"
  },
  "produces": [
    "application/json"
  ],
  "host": "clinicwebapp.azurewebsites.net",
  "basePath": "/hip",
  "paths": {
    "/facilities/{facilityId}/visits": {
      "get": {
        "summary": "Get facility visits",
        "description": "Returns an array of links to patient visits to the specified facility",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getVisitsByFacility",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "ID of facility to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "visit references response",
            "schema": {
              "$ref": "#/definitions/visitReference"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      },
      "post": {
        "summary": "Add visit",
        "description": "Adds a new patient Visit for the facility",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "postVisitAtFacility",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "ID of facility where the Visit took place",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/visit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "visit reference response",
            "schema": {
              "$ref": "#/definitions/visitReference"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/facilities/{facilityId}/visits/upload": {
      "post": {
        "summary": "Upload visits",
        "description": "Upload an array of visits.  This operation will add them all.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "postVisitsAtFacility",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "ID of facility where the Visit took place",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/visitUpload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "visit reference response",
            "schema": {
              "$ref": "#/definitions/visitReference"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/facilities": {
      "get": {
        "summary": "",
        "description": "The Facilities endpoint returns the list of all MTI Facilities that are currently registered with the API.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getAllFacilities",
        "parameters": [
          {
            "name": "settlement",
            "in": "query",
            "description": "ID of a settlement.  Will filter facilities by that settlement.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "facilities response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/facility"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/facilities/{facilityId}": {
      "get": {
        "summary": "",
        "description": "Returns a facility based on a single ID",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getFacilityById",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "description": "ID of facility to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "facility response",
            "schema": {
              "$ref": "#/definitions/facility"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/settlements": {
      "get": {
        "summary": "",
        "description": "The Settlements endpoint returns the list of all MTI Settlements that are currently registered with the API.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getAllSettlements",
        "responses": {
          "200": {
            "description": "settlements response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/settlement"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/settlements/{settlement}/facilities": {
      "get": {
        "summary": "Settlement facilities",
        "description": "Returns the list of all MTI Facilities for the Settlement that are currently registered with the API.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getFacilitiesBySettlement",
        "parameters": [
          {
            "name": "settlement",
            "in": "path",
            "description": "Name of settlement to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "facilities response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/facility"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/citizenships": {
      "get": {
        "summary": "Citizenship Lookup List",
        "description": "The Citizenship endpoint returns the list of all Citizenships that are currently registered with the API.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getAllCitizenships",
        "responses": {
          "200": {
            "description": "citizenship response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/citizenship"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/diagnosis": {
      "get": {
        "summary": "Diagnosis Lookup List",
        "description": "The Diagnosis endpoint returns the list of all Diagnosis that are currently registered with the API.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getAllDiagnosis",
        "responses": {
          "200": {
            "description": "diagnosis response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/diagnosis"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/diagnosis/{diagnosisId}": {
      "get": {
        "summary": "Diagnosis",
        "description": "Returns a diagnosis based on a single ID",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getDiagnosisById",
        "parameters": [
          {
            "name": "diagnosisId",
            "in": "path",
            "description": "ID of diagnosis to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "diagnosis response",
            "schema": {
              "$ref": "#/definitions/diagnosis"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/diagnosis/{diagnosisId}/supplementals": {
      "get": {
        "summary": "Supplementals of Diagnosis",
        "description": "Returns an array of supplementals for the diagnosis",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getSupplementalsByDiagnosis",
        "parameters": [
          {
            "name": "diagnosisId",
            "in": "path",
            "description": "ID of diagnosis for the supplementals to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "supplementals response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/supplemental"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/supplementals": {
      "get": {
        "summary": "Supplementals lookup list",
        "description": "The Supplementals endpoint returns the list of all diagnosis Supplementals that are currently registered with the API.",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getAllSupplementals",
        "parameters": [
          {
            "name": "diagnosis",
            "in": "query",
            "description": "ID of a diagnosis.  Will filter supplementals by that diagnosis.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "supplementals response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/supplemental"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/supplementals/{supplementalId}": {
      "get": {
        "summary": "Supplemental",
        "description": "Returns a supplemental based on a single ID",
        "x-swagger-router-controller": "Default",
        "tags": [
          "Default"
        ],
        "operationId": "getSupplementalById",
        "parameters": [
          {
            "name": "supplementalId",
            "in": "path",
            "description": "ID of supplemental to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "supplemental response",
            "schema": {
              "$ref": "#/definitions/supplemental"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "facility": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "settlement": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "settlement": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "facilityCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "citizenship": {
      "type": "object",
      "required": [
        "id",
        "level"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "diagnosis": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "supplemental": {
      "type": "object",
      "required": [
        "id",
        "name",
        "diagnosis"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "diagnosis": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "visitReference": {
      "type": "object",
      "required": [
        "id",
        "url"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "visitUpload": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/visit"
      }
    },
    "visit": {
      "type": "object",
      "required": [
        "beneficiaryType",
        "gender",
        "isRevisit",
        "patientAgeMonths",
        "patientDiagnosis",
        "staffMemberName",
        "visitDate"
      ],
      "properties": {
        "facility": {
          "type": "integer",
          "format": "int64"
        },
        "staffMemberName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "beneficiaryType": {
          "type": "integer",
          "format": "int64"
        },
        "patientAgeMonths": {
          "type": "integer",
          "format": "int64"
        },
        "isRevisit": {
          "type": "boolean"
        },
        "OPD": {
          "type": "integer",
          "format": "int64"
        },
        "visitDate": {
          "description": "the timestamp of the visit in the form YYYY-MM-DDThh:mm:ss.000+HHMM ",
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "injuryLocation": {
          "$ref": "#/definitions/id"
        },
        "stiContactsTreated": {
          "type": "integer",
          "format": "int64"
        },
        "patientDiagnosis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/diagnosis"
          }
        }
      }
    },
    "diagnosis": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/id"
        },
        "name": {
          "type": "string"
        },
        "supplementals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/supplemental"
          }
        }
      }
    },
    "supplemental": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/id"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "id": {
      "type": "integer",
      "format": "int64"
    },
    "errorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
